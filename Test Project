#include <stdio.h>
#include <stdlib.h>
/*
 * @author Ramana
 * @date 03/16/2023
 * 
 * Test Project file for quick hands on.
 */

void
merge(int arr[], int left, int mid, int right)
{
    int left_size = mid - left+1, right_size = right - mid;
    int Left[left_size],Right[right_size], i = 0, j = 0, k = left;
    for (i=0; i < left_size; i++)
        Left[i] = arr[left+i];
    for (i=0; i < right_size; i++)
        Right[i] = arr[mid+i+1];
    i = 0;
    while(i < left_size && j < right_size) {
        if (Left[i] > Right[j]) {
            arr[k] = Right[j];
            j++;
        } else {
            arr[k] = Left[i];
            i++;
        }
        k++;
    }
    while(i < left_size) {
        arr[k] = Left[i];
        i++;
        k++;
    }
    while(j < right_size) {
        arr[k] = Right[j];
        j++;
        k++;
    }

    return;
}

void
divide_and_merge(int arr[], int left, int right)
{
    if (left < right)
	{
	  int mid = left + (right - left) / 2;
	  divide_and_merge(arr, left, mid);
	  divide_and_merge(arr, mid + 1, right);
	  merge(arr, left, mid, right);
	}
}

int
main (void)
{
    int target = 55, index = 0;
    int array[] = {10, 20, 35, 45, 30, 25};
    //int array[] = { 12, 11, 13, 5, 6, 7 };
    int size = sizeof(array)/sizeof(array[0]);
    
    printf("Initial array is : \n");
    for (index = 0; index < size; index++)
	{
        printf("%d\t", array[index]);
	}
	printf("\n");
    divide_and_merge(array, 0, size-1);
    printf("Sroted array is : \n");
    for (index = 0; index < size; index++)
	{
        printf("%d\t", array[index]);
	}
	printf("\n");
	int left = 0, right = size - 1;
    while(left < right) {
        if (array[left] + array[right] > target) {
            right--;
        } else if (array[left] + array[right] < target) {
            left++;
        } else {
            printf("Target %d found, elements are: %d, %d\n", target, array[left], array[right]);
            left++;
            right--;
        }
    }
    return 0;
}
